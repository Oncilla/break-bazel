// Code generated by MockGen. DO NOT EDIT.
// Source: breaker/breaker.go

// Package mock_breaker is a generated GoMock package.
package mock_breaker

import (
	breaker "github.com/Oncilla/break-bazel/breaker"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSmasher is a mock of Smasher interface
type MockSmasher struct {
	ctrl     *gomock.Controller
	recorder *MockSmasherMockRecorder
}

// MockSmasherMockRecorder is the mock recorder for MockSmasher
type MockSmasherMockRecorder struct {
	mock *MockSmasher
}

// NewMockSmasher creates a new mock instance
func NewMockSmasher(ctrl *gomock.Controller) *MockSmasher {
	mock := &MockSmasher{ctrl: ctrl}
	mock.recorder = &MockSmasherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSmasher) EXPECT() *MockSmasherMockRecorder {
	return m.recorder
}

// Smash mocks base method
func (m *MockSmasher) Smash() (breaker.Broken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Smash")
	ret0, _ := ret[0].(breaker.Broken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Smash indicates an expected call of Smash
func (mr *MockSmasherMockRecorder) Smash() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Smash", reflect.TypeOf((*MockSmasher)(nil).Smash))
}
